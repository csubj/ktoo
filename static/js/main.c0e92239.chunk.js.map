{"version":3,"sources":["logo.png","components/Tabs/TabTitle.tsx","components/Tabs/Tabs.tsx","components/Tabs/Tab.tsx","components/Rooms/Room.tsx","components/Rooms/Rooms.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TabTitle","title","setSelectedTab","index","onClick","useCallback","className","Tabs","children","useState","selectedTab","map","item","props","Tab","ResponsiveReactGridLayout","WidthProvider","Responsive","Room","state","items","i","key","list","toString","x","y","w","h","newCounter","onAddItem","bind","onBreakpointChange","el","data-grid","style","position","right","top","cursor","this","onRemoveItem","console","log","setState","concat","length","cols","Infinity","breakpoint","_","reject","id","createElement","React","PureComponent","defaultProps","lg","md","sm","xs","xxs","rowHeight","Rooms","rooms","room","App","clubRooms","src","logo","alt","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0e92239.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.84e5ff12.png\";","import React, { useCallback,CSSProperties } from \"react\";\n\ntype Props = {\n  title: string\n  index: number\n  setSelectedTab: (index: number) => void\n}\n\nconst TabTitle: React.FC<Props> = ({ title, setSelectedTab, index }) => {\n\n  const onClick = useCallback(() => {\n    setSelectedTab(index)\n  }, [setSelectedTab, index])\n\n\n  return (\n    <li className=\"tab-list-item\">\n      <button className=\"button\" onClick={onClick}>{title}</button>\n    </li>\n  )\n}\n\nexport default TabTitle","import React, { ReactElement, useState } from \"react\"\nimport TabTitle from \"./TabTitle\"\n\ntype Props = {\n    children: ReactElement[]\n}\n\nconst Tabs: React.FC<Props> = ({ children }) => {\n    const [selectedTab, setSelectedTab] = useState(0)\n\n    return (\n        <div>\n            <ol className=\"tab-list\">\n                {children.map((item, index) => (\n                    <TabTitle\n                        key={index}\n                        title={item.props.title}\n                        index={index}\n                        setSelectedTab={setSelectedTab}\n                    />\n                ))}\n            </ol>\n            {children[selectedTab]}\n        </div>\n    )\n}\n\nexport default Tabs","import React from 'react'\n\ntype Props = {\n  title: string\n}\n\nconst Tab: React.FC<Props> = ({ children }) => {\n  return <div>{children}</div>\n}\n\nexport default Tab","import React, { CSSProperties } from 'react';\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport _ from \"lodash\";\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\n\nexport default class Room extends React.PureComponent<any, any>  {\n    static defaultProps = {\n        className: \"layout\",\n        cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n        rowHeight: 50\n    };\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            items: [\"jeff\", \"megan\", \"steph\"].map(function (i, key, list) {\n                return {\n                    i: i.toString(),\n                    x: 1,\n                    y: 0,\n                    w: 2,\n                    h: 1,\n                };\n            }),\n            newCounter: 0\n        };\n\n        this.onAddItem = this.onAddItem.bind(this);\n        this.onBreakpointChange = this.onBreakpointChange.bind(this);\n    }\n\n    createElement(el: any) {\n        const removeStyle: CSSProperties = {\n            position: \"absolute\",\n            right: \"2px\",\n            top: 0,\n            cursor: \"pointer\"\n        };\n\n        return (\n            <div key={ el.i} data-grid={el}>\n                { (\n                        <span className=\"text\">{ el.i}</span>\n                    )}\n                <span\n                    className=\"remove\"\n                    style={removeStyle}\n                    onClick={this.onRemoveItem.bind(this,  el.i)}\n                >\n                    x\n            </span>\n            </div>\n        );\n    }\n\n    onAddItem() {\n        /*eslint no-console: 0*/\n        console.log(\"adding\", \"n\" + this.state.newCounter);\n        this.setState({\n            // Add a new item. It must have a unique key!\n            items: this.state.items.concat({\n                i: \"n\" + this.state.newCounter,\n                x: (this.state.items.length * 2) % (this.state.cols || 12),\n                y: Infinity, // puts it at the bottom\n                w: 2,\n                h: 1\n            }),\n            // Increment the counter to ensure key is always unique.\n            newCounter: this.state.newCounter + 1\n        });\n    }\n\n    // We're using the cols coming back from this to calculate where to add new items.\n    onBreakpointChange(breakpoint: any, cols: any) {\n        this.setState({\n            breakpoint: breakpoint,\n            cols: cols\n        });\n    }\n\n    // onLayoutChange(layout: any) {\n    //     this.props.onLayoutChange(layout);\n    //     this.setState({ layout: layout });\n    // }\n\n    onRemoveItem(i: any) {\n        console.log(\"removing\", i);\n        this.setState({ items: _.reject(this.state.items, { i: i }) });\n    }\n\n    render() {\n        console.log(this.state.items)\n        return (\n            <div>\n\n                <div className=\"dropdown\">\n                    <button onClick={this.onAddItem} className=\"dropbtn\">Add Staff</button>\n                    <div id=\"myDropdown\" className=\"dropdown-content\">\n                    </div>\n                </div>\n\n                <ResponsiveReactGridLayout\n                    // onLayoutChange={this.onLayoutChange}\n                    onBreakpointChange={this.onBreakpointChange}\n                    {...this.props}\n                >\n                    {_.map(this.state.items, el => this.createElement(el))}\n                </ResponsiveReactGridLayout>\n            </div>\n        );\n    }\n}\n\n","import React from 'react'\nimport Room from './Room';\n\ntype Props = {\n    rooms: Array<string>\n}\n\nconst Rooms: React.FC<Props> = ({ rooms }) => {\n    const layout = [\n        { i: 'a', x: 0, y: 0, w: 1, h: 2 },\n        { i: 'b', x: 1, y: 0, w: 2, h: 2 },\n        { i: 'c', x: 4, y: 0, w: 1, h: 2 }\n    ];\n    return (\n        <ol>\n            {rooms.map((room) => (\n                <li>\n                    <div className=\"maybe\">{room}</div>\n                    <Room></Room>\n                </li>\n            ))}\n        </ol>\n    );\n}\n\n\nexport default Rooms","import React from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport Tabs from \"./components/Tabs\"\nimport Tab from \"./components/Tabs/Tab\"\nimport Rooms from \"./components/Rooms/Rooms\"\n\n\nfunction App() {\n  const clubRooms = [\"frogs\", \"wallaby\", \"gecko\", \"just kill me\"];\n\n  return (\n    <div className=\"App\">\n      <div>\n        <>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 style={{ display: \"inline\" }}>ktoo v1</h1>\n        </>\n        <Tabs>\n          <Tab title=\"Monday\"><Rooms rooms={clubRooms} /></Tab>\n          <Tab title=\"Tuesday\"><Rooms rooms={clubRooms} /></Tab>\n          <Tab title=\"Wednesday\"><Rooms rooms={clubRooms} /></Tab>\n          <Tab title=\"Thursday\"><Rooms rooms={clubRooms} /></Tab>\n          <Tab title=\"Friday\"><Rooms rooms={clubRooms} /></Tab>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}